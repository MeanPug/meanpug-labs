apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "antifraud.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "antifraud.name" . }}
    helm.sh/chart: {{ include "antifraud.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "antifraud.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "antifraud.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYSQL_HOST
              value: {{ include "antifraud.fullname" . }}-mysql
            - name: MYSQL_DB
              value: {{ .Values.mysql.mysqlDatabase }}
            - name: MYSQL_USERNAME
              value: {{ .Values.mysql.mysqlUser }}            
            - name: MYSQL_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: {{ include "antifraud.fullname" . }}-mysql
                  key: mysql-password
            - name: MONGO_HOST
              value: {{ .Values.mongo.host }}
            - name: MONGO_DB
              value: {{ .Values.mongo.db }}
            - name: MONGO_USERNAME
              value: {{ .Values.mongo.username }}
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: antifraud-mongodb
                  key: mongodb-root-password
          command: ["java"]
          args: ["-jar", "-Dspring.profiles.active=release", "target/{{ .Values.app.version }}.jar"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /rest/engine
              port: http
          readinessProbe:
            httpGet:
              path: /rest/engine
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
